/**
 * generated by Xtext 2.10.0
 */
package org.tetrabox.minijava.xtext;

import com.google.inject.Binder;
import com.google.inject.name.Names;
import org.eclipse.xtext.resource.IDefaultResourceDescriptionStrategy;
import org.eclipse.xtext.scoping.IScopeProvider;
import org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider;
import org.tetrabox.minijava.xtext.AbstractMiniJavaRuntimeModule;
import org.tetrabox.minijava.xtext.scoping.MiniJavaImportedNamespaceAwareLocalScopeProvider;
import org.tetrabox.minijava.xtext.scoping.MiniJavaResourceDescriptionsStrategy;

/**
 * Use this class to register components to be used at runtime / without the Equinox extension registry.
 */
@SuppressWarnings("all")
public class MiniJavaRuntimeModule extends AbstractMiniJavaRuntimeModule {
  @Override
  public void configureIScopeProviderDelegate(final Binder binder) {
    binder.<IScopeProvider>bind(IScopeProvider.class).annotatedWith(
      Names.named(AbstractDeclarativeScopeProvider.NAMED_DELEGATE)).to(
      MiniJavaImportedNamespaceAwareLocalScopeProvider.class);
  }
  
  public Class<? extends IDefaultResourceDescriptionStrategy> bindIDefaultResourceDescriptionStrategy() {
    return MiniJavaResourceDescriptionsStrategy.class;
  }
}
